name: Build Android RELEASE

on:
  workflow_dispatch:
  push:
    tags: ['v*']

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: |
          npm ci
          npm run build || npm run build:web || echo "no web build step"
      - name: Capacitor sync
        run: npx cap sync android
      - uses: actions/setup-java@v4
        with: { distribution: 'temurin', java-version: '17' }
      - name: Use preinstalled Android SDK
        run: |
          echo "ANDROID_SDK_ROOT=${ANDROID_HOME:-$ANDROID_SDK_ROOT}" >> $GITHUB_ENV
          echo "PATH=$ANDROID_HOME/platform-tools:$ANDROID_HOME/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV
          echo "Using Android SDK: $ANDROID_SDK_ROOT"
          ls -la "$ANDROID_SDK_ROOT/platforms/" || echo "No platforms directory found"
      - name: Restore keystore
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > android/release.keystore
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      - name: Build RELEASE
        working-directory: android
        env:
          KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          chmod +x ./gradlew
          ./gradlew assembleRelease --stacktrace
      - uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: android/app/build/outputs/apk/release/*.apk

  github-release:
    needs: build-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with: { name: app-release, path: ./apk }
      - uses: softprops/action-gh-release@v2
        with: { files: ./apk/*.apk }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
